Here's an advanced CSS cheat sheet to cover everything from selectors and units to layout, animations, responsive design, and variables.

---

### **CSS Syntax Basics**
```css
selector {
    property: value;
}
```

---

### **CSS Selectors**

#### **Basic Selectors**
- **Element**: `p` – Selects all `<p>` elements.
- **Class**: `.class-name` – Selects elements with `class="class-name"`.
- **ID**: `#id-name` – Selects elements with `id="id-name"`.

#### **Combinators**
- **Descendant**: `div p` – Selects all `<p>` elements inside `<div>`.
- **Child**: `div > p` – Selects direct child `<p>` elements of `<div>`.
- **Adjacent Sibling**: `div + p` – Selects first `<p>` element immediately following `<div>`.
- **General Sibling**: `div ~ p` – Selects all `<p>` elements following `<div>`.

#### **Attribute Selectors**
```css
a[href]         /* Elements with href attribute */
input[type="text"] /* Input elements of type text */
a[href*="example"] /* Elements with "example" in href */
```

#### **Pseudo-Classes**
- **Link States**: `:link`, `:visited`, `:hover`, `:focus`, `:active`
- **Structural**: `:first-child`, `:last-child`, `:nth-child(3n)`, `:nth-of-type()`, `:only-child`

#### **Pseudo-Elements**
- `::before` – Inserts content before element content.
- `::after` – Inserts content after element content.
- `::first-line`, `::first-letter` – Style the first line or letter.

```css
p::first-letter {
    font-size: 2em;
    color: red;
}
```

---

### **CSS Units**
- **Absolute Units**: `px`, `in`, `cm`, `mm`
- **Relative Units**: `em`, `rem`, `%`, `vh`, `vw`, `vmin`, `vmax`

---

### **Box Model**
```css
element {
    width: 100px;          /* Content width */
    padding: 10px;         /* Space inside border */
    border: 1px solid black; /* Border around padding */
    margin: 10px;          /* Space outside border */
    box-sizing: border-box; /* Includes padding and border in width */
}
```

---

### **Flexbox (Flexible Box Layout)**
- **Container Properties**:
  ```css
  .container {
      display: flex;
      flex-direction: row;       /* row | row-reverse | column | column-reverse */
      justify-content: center;   /* flex-start | flex-end | center | space-between */
      align-items: center;       /* align items vertically */
      flex-wrap: wrap;           /* nowrap | wrap | wrap-reverse */
  }
  ```

- **Item Properties**:
  ```css
  .item {
      flex-grow: 1;              /* Defines how much a flex item should grow */
      flex-shrink: 1;            /* Defines how much a flex item should shrink */
      flex-basis: 100px;         /* Initial size of flex item */
      align-self: center;        /* Overrides align-items for individual item */
  }
  ```

---

### **CSS Grid Layout**
- **Container Properties**:
  ```css
  .grid-container {
      display: grid;
      grid-template-columns: 1fr 2fr;   /* Defines columns sizes */
      grid-template-rows: 100px auto;   /* Defines rows sizes */
      gap: 10px;                        /* Space between grid items */
  }
  ```

- **Item Properties**:
  ```css
  .grid-item {
      grid-column: 1 / 3;        /* Start at column 1, span to column 3 */
      grid-row: 1 / 2;           /* Start at row 1, span to row 2 */
  }
  ```

---

### **CSS Variables (Custom Properties)**
```css
:root {
    --main-color: #3498db;
    --padding: 10px;
}

element {
    color: var(--main-color);
    padding: var(--padding);
}
```

---

### **Typography**
- **Font Family**: `font-family: 'Roboto', sans-serif;`
- **Font Size**: `font-size: 16px;`
- **Font Weight**: `font-weight: bold;` (or `400`, `700`, etc.)
- **Line Height**: `line-height: 1.5;`
- **Text Alignment**: `text-align: center;`
- **Text Decoration**: `text-decoration: underline;`
- **Text Shadow**: `text-shadow: 1px 1px 2px #000;`

---

### **Colors**
- **Hex**: `#ff5733`
- **RGB**: `rgb(255, 87, 51)`
- **RGBA**: `rgba(255, 87, 51, 0.5)`
- **HSL**: `hsl(12, 100%, 50%)`

---

### **Backgrounds**
```css
element {
    background-color: #f0f0f0;
    background-image: url('image.jpg');
    background-size: cover;        /* cover | contain | auto */
    background-position: center;   /* center | top | bottom | left | right */
    background-repeat: no-repeat;  /* repeat | no-repeat | repeat-x | repeat-y */
}
```

---

### **Borders & Outline**
```css
element {
    border: 1px solid #333;         /* Width, Style, Color */
    border-radius: 8px;             /* Rounded corners */
    outline: 2px solid #333;        /* Outline around element */
    outline-offset: 2px;            /* Distance of outline from element */
}
```

---

### **Transitions and Animations**
#### **Transitions**
```css
element {
    transition: all 0.3s ease-in-out; /* property duration timing-function */
}

element:hover {
    color: red;
}
```

#### **Animations**
```css
@keyframes slideIn {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}

element {
    animation: slideIn 0.5s forwards; /* name duration fill-mode */
}
```

---

### **Transformations**
```css
element {
    transform: translateX(10px);    /* Moves element */
    transform: rotate(45deg);       /* Rotates element */
    transform: scale(1.5);          /* Scales element */
}
```

---

### **Positioning**
```css
element {
    position: relative;             /* relative | absolute | fixed | sticky */
    top: 10px;                      /* Offset from top */
    left: 10px;                     /* Offset from left */
    z-index: 1;                     /* Stack order */
}
```

---

### **Responsive Design with Media Queries**
```css
@media (max-width: 768px) {
    .container {
        flex-direction: column;
    }
}
```

---

### **Shadows**
- **Box Shadow**: `box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);`
- **Text Shadow**: `text-shadow: 1px 1px 2px #333;`

---

### **Overflow Handling**
```css
element {
    overflow: hidden;               /* hidden | scroll | auto */
    overflow-x: scroll;
    overflow-y: hidden;
}
```

---

### **Advanced Techniques**
#### **CSS Clamp for Responsive Sizing**
```css
element {
    font-size: clamp(1rem, 2vw + 1rem, 3rem); /* Min, preferred, max values */
}
```

#### **Aspect Ratios**
```css
.element {
    aspect-ratio: 16 / 9; /* Width to height ratio */
}
```

#### **Custom Scrollbars**
```css
/* Webkit Browsers */
element::-webkit-scrollbar {
    width: 8px;
}

element::-webkit-scrollbar-thumb {
    background-color: #888;
}
```

---

### **CSS Functions**
- **calc()**: `width: calc(100% - 20px);`
- **min() / max()**: `font-size: min(3vw, 1.5rem);`
- **clamp()**: `font-size: clamp(1rem, 2vw, 2rem);`
  
---

### **Print Styles**
```css
@media print {
    body {
        color: black;
    }
    .no-print {
        display: none; /* Hides elements from print view */
    }
}
```

---

### **Example of a Complex CSS Layout Using Grid and Flexbox**
```css
.container {
    display: grid;
    grid-template-columns: 1fr 3fr;
    gap: 20px;
}

.sidebar {
    background-color: #f4f4f4;
}

.content {
    display: flex;
    flex-direction: column;
    gap: 20px;
}
```

---

This CSS cheat sheet should cover most advanced techniques and properties, helping you create complex layouts and responsive designs efficiently!